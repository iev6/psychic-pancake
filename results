Results
=======


Adding normal noise to weights:

#use variance prop to mean layer weight
sigma values =  [0.01, 0.1, 0.2, 0.5, 0.8, 1, 1.5, 2] #proportional to average weight value in the layer
mean acc =  [0.9913 , 0.99051, 0.98841, 0.98187, 0.94769, 0.92307, 0.82096, 0.74688] #10expts per sigma
normal_noiseMNIST1.txt

#use variance prop to weight of original distribution
sigma_n values = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0 ] , n_expt = 10
Rep1 mean_acc = [0.9913 , 0.74611, 0.2676 , 0.16691, 0.12894, 0.11748, 0.12431,0.10902, 0.11119, 0.11454]
Rep2 mean_acc = [0.9913 , 0.81745, 0.33619, 0.15088, 0.14253, 0.11853, 0.11351,0.09976, 0.11668, 0.09388]
Rep3 mean_acc = [0.9913 , 0.85632, 0.3866 , 0.17578, 0.1225 , 0.11798, 0.09903,0.11692, 0.10489, 0.11138]

#use variance prop to avg layer weight
sigma_n values = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0 ] , n_expt = 10
Rep1 mean_acc =  [0.9913 , 0.99041, 0.98853, 0.98226, 0.94832, 0.90465, 0.86974,0.69344, 0.61227, 0.51282]
Rep2 mean_acc =  [0.9913 , 0.99073, 0.98915, 0.97953, 0.95732, 0.92022, 0.83483, 0.72839, 0.66177, 0.48949]
Rep3 mean_acc =  [0.9913 , 0.99028, 0.98753, 0.97963, 0.96178, 0.9255 , 0.83848, 0.70862, 0.67155, 0.45259]

#use variance prop to glob avg weight
glob avg weight = -0.014741559
sigma_n values = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0 ] , n_expt = 10
Rep1 mean_acc = [0.9913 , 0.99133, 0.98936, 0.98701, 0.98371, 0.96855, 0.93964,  0.9065 , 0.75299, 0.66726]
Rep2 mean_acc = [0.9913 , 0.99109, 0.99014, 0.98746, 0.98185, 0.97428, 0.91707,  0.83958, 0.71837, 0.69071]
Rep3 mean_acc = [0.9913 , 0.99108, 0.9896 , 0.98661, 0.97942, 0.96483, 0.93532,  0.87781, 0.73928, 0.61412]


CIFAR-10

#use variance prop to global avg weight
global avg weight = -0.025148466 

sigma_n values = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0 ] , n_expt = 10
Rep1 mean_acc = [0.7675 , 0.17274, 0.10951, 0.11017, 0.09955, 0.0976 , 0.09424, 0.10632, 0.09948, 0.09828]
Rep2 mean_acc = [0.7675 , 0.17158, 0.10633, 0.10005, 0.10313, 0.10366, 0.10127, 0.10267, 0.09748, 0.10217]
Rep3 mean_acc = [0.7675 , 0.16741, 0.11369, 0.10724, 0.10444, 0.10096, 0.09294, 0.10148, 0.09664, 0.09944]


#use variance prop to avg layer weight
sigma_n values = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0 ] , n_expt = 10
Rep1 mean_acc = [0.7675 , 0.27227, 0.13416, 0.11284, 0.10325, 0.1017 , 0.10305,  0.09987, 0.10094, 0.10013]
Rep2 mean_acc = [0.7675 , 0.26484, 0.15838, 0.12739, 0.10608, 0.10704, 0.09942,  0.10252, 0.10199, 0.1077]
Rep3 mean_acc = [0.7675 , 0.24447, 0.142  , 0.12179, 0.10395, 0.10347, 0.09952,  0.10358, 0.10192, 0.09916]

#use variance prop to weight
sigma_n values = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0 ] , n_expt = 10
Rep1 mean_acc = [0.7675 , 0.11344, 0.10375, 0.09855, 0.09811, 0.09528, 0.10149,  0.09778, 0.09786, 0.10178]
Rep2 mean_acc = [0.7675 , 0.10583, 0.10311, 0.09847, 0.10107, 0.09858, 0.09862,  0.10172, 0.09771, 0.10077]
Rep3 mean_acc = [0.7675 , 0.10893, 0.10097, 0.09775, 0.09846, 0.1004 , 0.09736,  0.10293, 0.10319, 0.10263]
















Bitwise masking on MNIST:

p_retain = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0 ]
Rep1 mean_acc = [0.09702, 0.09468, 0.09711, 0.10025, 0.10023, 0.10025, 0.10075, 0.10909, 0.18457, 0.9913 ]

p_retain = [0.9, 0.91, 0.92, 0.93, 0.94, 0.95, 0.96, 0.97, 0.98, 1.0]
Rep1 mean_acc = [0.26493, 0.201  , 0.32029, 0.3111 , 0.43332, 0.48179, 0.61717, 0.81503, 0.9624 , 0.9913 ]
Rep2 mean_acc = [0.23495, 0.29625, 0.34273, 0.26851, 0.38203, 0.52043, 0.70188, 0.71415, 0.96355, 0.9913 ]
Rep3 mean_acc = [0.18717, 0.23547, 0.2302 , 0.39778, 0.40614, 0.59581, 0.68554, 0.79597, 0.93068, 0.9913 ]

p_retain = [0.98, 0.982, 0.984, 0.986, 0.988,  0.991, 0.993, 0.995, 0.997, 1.0]       
Rep1 mean_acc = [0.84888, 0.91466, 0.87397, 0.94075, 0.93107, 0.97232, 0.98308,  0.98804, 0.99001, 0.9913 ]
Rep2 mean_acc = [0.92055, 0.90869, 0.89528, 0.92103, 0.95997, 0.91572, 0.9182 ,  0.97767, 0.98968, 0.9913 ]



Bitwise masking on  CIFAR-10

p_retain = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0 ]
Rep1 mean_acc = [0.09951, 0.09837, 0.10052, 0.09576, 0.10033, 0.10044, 0.10006, 0.10055, 0.09773, 0.7669 ]

p_retain = [0.91, 0.92, 0.93, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99, 1.0 ]
Rep1 mean_acc = [0.10107, 0.10278, 0.10227, 0.10069, 0.09688, 0.10074, 0.10409, 0.10529, 0.13462, 0.7669 ]
Rep2 mean_acc = [0.10086, 0.1041 , 0.09847, 0.10087, 0.10401, 0.09967, 0.09963, 0.10539, 0.1095 , 0.7669 ]
Rep3 mean_acc = [0.10108, 0.10307, 0.10173, 0.10387, 0.10369, 0.10348, 0.10133, 0.11693, 0.131  , 0.7669 ]

p_retain = [0.98, 0.982, 0.984, 0.986, 0.988,  0.991, 0.993, 0.995, 0.997, 1.0]
Rep1 mean_acc = [0.10822, 0.1066 , 0.11195, 0.10317, 0.11019, 0.12223, 0.15902,  0.17984, 0.24155, 0.7669]
Rep2 mean_acc = [0.10279, 0.10186, 0.10637, 0.11254, 0.13117, 0.10927, 0.18182, 0.11589, 0.20229, 0.7669]
Rep3 mean_acc = [0.1126 , 0.10531, 0.11239, 0.11115, 0.11324, 0.12735, 0.14143, 0.13994, 0.31435, 0.7669]



Mean & STD

np.std(mnistWeights) = 0.026441282056262037

np.std(cifarWeights) =  0.11639391518130722

np.mean(cifarWeights) = 0.08137779752804684

np.mean(mnistWeights) = 0.0002814882723096585